[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 10 products, 7 sources, 7 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/de/htwg/se/madn/util/ObserverSpec.scala, ${BASE}/src/test/scala/de/htwg/se/madn/aview/TuiSpec.scala, ${BASE}/src/test/scala/de/htwg/se/madn/model/HomeSpec.scala, ${BASE}/src/test/scala/de/htwg/se/madn/model/FiledSpec.scala, ${BASE}/src/test/scala/de/htwg/se/madn/model/PlayerSpec.scala, ${BASE}/src/test/scala/de/htwg/se/madn/controller/ControllerSpec.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/src/test/scala/de/htwg/se/madn/util/CommandSpec.scala), changed = Set(${BASE}/src/test/scala/de/htwg/se/madn/controller/ControllerSpec.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/test/scala/de/htwg/se/madn/util/CommandSpec.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/test/scala/de/htwg/se/madn/controller/ControllerSpec.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(de.htwg.se.madn.util.CommandSpec, de.htwg.se.madn.Controller.ControllerSpec.Obs, de.htwg.se.madn.Controller.ControllerSpec)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(de.htwg.se.madn.util.CommandSpec, de.htwg.se.madn.Controller.ControllerSpec.Obs, de.htwg.se.madn.Controller.ControllerSpec)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/test/scala/de/htwg/se/madn/controller/ControllerSpec.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: de.htwg.se.madn.util.CommandSpec, de.htwg.se.madn.Controller.ControllerSpec.Obs, de.htwg.se.madn.Controller.ControllerSpec[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to C:\Users\User\Documents\Htwg\se\MADN\MenschAergereDichNicht\target\scala-3.1.0\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-sbt-bridge\3.1.0\scala3-sbt-bridge-3.1.0.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 43c27bea for Scala Compiler version 3.1.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-library_3\3.1.0\scala3-library_3-3.1.0.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.6\scala-library-2.13.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\User\Documents\Htwg\se\MADN\MenschAergereDichNicht\target\scala-3.1.0\test-classes;C:\Users\User\Documents\Htwg\se\MADN\MenschAergereDichNicht\target\scala-3.1.0\classes;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalactic\scalactic_3\3.2.10\scalactic_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest_3\3.2.10\scalatest_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-swing_2.13\3.0.0\scala-swing_2.13-3.0.0.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\inject\guice\5.0.1\guice-5.0.1.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\net\codingwell\scala-guice_2.13\5.0.2\scala-guice_2.13-5.0.2.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-core_3\3.2.10\scalatest-core_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-featurespec_3\3.2.10\scalatest-featurespec_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-flatspec_3\3.2.10\scalatest-flatspec_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-freespec_3\3.2.10\scalatest-freespec_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funsuite_3\3.2.10\scalatest-funsuite_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funspec_3\3.2.10\scalatest-funspec_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-propspec_3\3.2.10\scalatest-propspec_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-refspec_3\3.2.10\scalatest-refspec_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-wordspec_3\3.2.10\scalatest-wordspec_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-diagrams_3\3.2.10\scalatest-diagrams_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-matchers-core_3\3.2.10\scalatest-matchers-core_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-shouldmatchers_3\3.2.10\scalatest-shouldmatchers_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-mustmatchers_3\3.2.10\scalatest-mustmatchers_3-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\guava\guava\30.1-jre\guava-30.1-jre.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.6\scala-reflect-2.13.6.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-collection-compat_2.13\2.1.2\scala-collection-compat_2.13-2.1.2.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-compatible\3.2.10\scalatest-compatible-3.2.10.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-xml_3\2.0.0\scala-xml_3-2.0.0.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\errorprone\error_prone_annotations\2.3.4\error_prone_annotations-2.3.4.jar;C:\Users\User\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.9581134 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from de.htwg.se.madn.util.CommandSpec...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: de.htwg.se.madn.util.CommandSpec[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(de.htwg.se.madn.util.CommandSpec)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(de.htwg.se.madn.util.CommandSpec,ModifiedNames(changes = UsedName(a,[Default]), UsedName(between,[Default]), UsedName(execute,[Default]), UsedName(Object;init;,[Default]), UsedName(noException,[Default]), UsedName(<,[Default]), UsedName(size,[Default]), UsedName(assert,[Default]), UsedName(ResultOfContainWordForCollectedAny,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$inline$registerTestImpl,[Default]), UsedName(ResultOfBeWordForAny,[Default]), UsedName(ResultOfEndWithWordForString,[Default]), UsedName(org$scalatest$Assertions$$inline$interceptImpl,[Default]), UsedName(AWord,[Default]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(Explicitly;init;,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(TheyWord,[Default]), UsedName(Documenting;init;,[Default]), UsedName(subjectWithAfterWordRegistrationFunction,[Implicit]), UsedName(note,[Default]), UsedName(execute$default$5,[Default]), UsedName(inOrderOnly,[Default]), UsedName(hashCode,[Default]), UsedName(>,[Default]), UsedName(endWith,[Default]), UsedName(theSameElementsInOrderAs,[Default]), UsedName(nestedSuites,[Default]), UsedName(Serializable;init;,[Default]), UsedName(createCatchReporter,[Default]), UsedName(assertThrows,[Default]), UsedName(withGroup,[Default]), UsedName(trap,[Default]), UsedName(allOf,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$super$run,[Default]), UsedName(Equalizer,[Default]), UsedName(execute$default$6,[Default]), UsedName(doCollected,[Default]), UsedName(MustVerb;init;,[Default]), UsedName(CanVerb;init;,[Default]), UsedName(withFixture,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(Notifying;init;,[Default]), UsedName(theSameElementsAs,[Default]), UsedName(ResultOfIncludeWordForCollectedString,[Default]), UsedName(notifyAll,[Default]), UsedName(stackDepth,[Default]), UsedName($asInstanceOf,[Default]), UsedName(CommandSpec,[Default]), UsedName(exist,[Default]), UsedName(WordSpecStringWrapper,[Default]), UsedName(Alerting;init;,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$inline$registerBranch,[Default]), UsedName(registerTest,[Default]), UsedName(eq,[Default]), UsedName(compile,[Default]), UsedName(suiteName,[Default]), UsedName(org$scalatest$Assertions$$inline$cancelImpl,[Default]), UsedName(assertResult,[Default]), UsedName(TestRegistration;init;,[Default]), UsedName(PlusOrMinusWrapper,[Default]), UsedName(inOrder,[Default]), UsedName(stripMargin,[Default]), UsedName(!==,[Default]), UsedName(TestSuite;init;,[Default]), UsedName(execute$default$2,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$inline$registerTestToRun,[Default]), UsedName(regex,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$inline$registerTestToIgnore,[Default]), UsedName(empty,[Default]), UsedName(be,[Default]), UsedName(theSameInstanceAs,[Default]), UsedName(wait,[Default]), UsedName(oneOf,[Default]), UsedName(toString,[Default]), UsedName(withClue,[Default]), UsedName(ResultOfEndWithWordForCollectedString,[Default]), UsedName(it,[Default]), UsedName(atMost,[Default]), UsedName(readable,[Default]), UsedName(Assertions;init;,[Default]), UsedName(ResultOfBeWordForCollectedArray,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(not,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$inline$Resources,[Default]), UsedName(ResultOfHaveWordForExtent,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(org$scalatest$Assertions$$inline$pendingUntilFixedImpl,[Default]), UsedName(testNames,[Default]), UsedName(all,[Default]), UsedName(no,[Default]), UsedName(AnyWordSpec;init;,[Default]), UsedName(fullyMatch,[Default]), UsedName(synchronized,[Default]), UsedName(ResultOfStartWithWordForCollectedString,[Default]), UsedName(every,[Default]), UsedName(ItWord,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(TripleEqualsSupport;init;,[Default]), UsedName(ResultOfFullyMatchWordForCollectedString,[Default]), UsedName(DecidedWord,[Default]), UsedName(should,[Default]), UsedName(include,[Default]), UsedName(execute$default$4,[Default]), UsedName(an,[Default]), UsedName(matchPattern,[Default]), UsedName(RegexWord,[Default]), UsedName(org$scalatest$Assertions$$inline$failImpl,[Default]), UsedName(run,[Default]), UsedName(shouldBe,[Default]), UsedName(writable,[Default]), UsedName(oneElementOf,[Default]), UsedName(execute$default$3,[Default]), UsedName(succeed,[Default]), UsedName(execute$default$1,[Default]), UsedName(===,[Default]), UsedName(key,[Default]), UsedName(ResultOfNotWordForCollectedAny,[Default]), UsedName(length,[Default]), UsedName(determined,[Default]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(intercept,[Default]), UsedName(runNestedSuites,[Default]), UsedName(runTests,[Default]), UsedName(asInstanceOf,[Default]), UsedName(defaultEquality,[Default]), UsedName(org$scalatest$Assertions$$inline$assertThrowsImpl,[Default]), UsedName(MatcherWords;init;,[Default]), UsedName(sorted,[Default]), UsedName(TripleEquals;init;,[Default]), UsedName(ShouldVerb;init;,[Default]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(AfterWord,[Default]), UsedName(Suite;init;,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$inline$registerShorthandBranch,[Default]), UsedName(ResultOfTaggedAsInvocationOnString,[Default]), UsedName(the,[Default]), UsedName(definedAt,[Default]), UsedName(DeterminedByEquivalence,[Default]), UsedName(<=,[Default]), UsedName(getClass,[Default]), UsedName(subjectRegistrationFunction,[Implicit]), UsedName(!=,[Default]), UsedName(runTest,[Default]), UsedName(markup,[Default]), UsedName(of,[Default]), UsedName(atLeastOneOf,[Default]), UsedName(DecidedByEquality,[Default]), UsedName(cancel,[Default]), UsedName(info,[Default]), UsedName(pending,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(CommandSpec;init;,[Default]), UsedName(atMostOneOf,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(==,[Default]), UsedName(startWith,[Default]), UsedName(Informing;init;,[Default]), UsedName(styleName,[Default]), UsedName(notify,[Default]), UsedName(have,[Default]), UsedName(clone,[Default]), UsedName(alert,[Default]), UsedName(ResultOfIncludeWordForString,[Default]), UsedName(ResultOfHaveWordForCollectedExtent,[Default]), UsedName(behave,[Default]), UsedName(unconstrainedEquality,[Default, Implicit]), UsedName(AnWord,[Default]), UsedName(convertToWordSpecStringWrapper,[Implicit]), UsedName(atMostOneElementOf,[Default]), UsedName(HavePropertyMatcherGenerator,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(isInstanceOf,[Default]), UsedName(shouldNot,[Default]), UsedName(withGroups,[Default]), UsedName(allElementsOf,[Default]), UsedName(value,[Default]), UsedName(after,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(convertToEqualizer,[Default, Implicit]), UsedName(noElementsOf,[Default]), UsedName(decided,[Default]), UsedName(message,[Default]), UsedName(afterWord,[Default]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(noneOf,[Default]), UsedName(testDataFor,[Default]), UsedName(only,[Default]), UsedName(UseDefaultAssertions,[Default, Implicit]), UsedName(finalize,[Default]), UsedName(expectedTestCount,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$inline$stackDepth,[Default]), UsedName(they,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(atLeast,[Default]), UsedName(assertTypeError,[Default]), UsedName(##,[Default]), UsedName(KeyWord,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(TheSameInstanceAsPhrase,[Default]), UsedName(ShouldMethodHelperClass,[Default]), UsedName(assume,[Default]), UsedName(org$scalatest$Assertions$$inline$newTestCanceledException,[Default]), UsedName(Tolerance;init;,[Default]), UsedName(typeCheck,[Default]), UsedName(>=,[Default]), UsedName(shouldEqual,[Default]), UsedName(AnyShouldWrapper,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(ResultOfFullyMatchWordForString,[Default]), UsedName(pipeChar,[Default]), UsedName(rerunner,[Default]), UsedName(equals,[Default]), UsedName(DeterminedWord,[Default]), UsedName(ResultOfBeWordForCollectedAny,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(Matchers;init;,[Default]), UsedName(org$scalatest$Assertions$$inline$newAssertionFailedException,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(tags,[Default]), UsedName(org$scalatest$wordspec$AnyWordSpecLike$$inline$registerIgnoredTestImpl,[Default]), UsedName(Collected,[Default]), UsedName(inOrderElementsOf,[Default]), UsedName(org$scalatest$Assertions$$inline$assertResultImpl,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(TheAfterWord,[Default]), UsedName(ValueWord,[Default]), UsedName(atLeastOneElementOf,[Default]), UsedName(equal,[Default]), UsedName(defined,[Default]), UsedName(ResultOfCollectedAny,[Default]), UsedName(execute$default$7,[Default]), UsedName(AnyWordSpecLike;init;,[Default]), UsedName(suiteId,[Default]), UsedName(NoArgTest,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(contain,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(thrownBy,[Default]), UsedName(exactly,[Default]), UsedName(assertCompiles,[Default]), UsedName(ResultOfStartWithWordForString,[Default]), UsedName(fail,[Default]))) invalidates 1 classes due to The de.htwg.se.madn.util.CommandSpec has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(subjectWithAfterWordRegistrationFunction,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(subjectRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Default, Implicit]), UsedName(convertToWordSpecStringWrapper,[Implicit]), UsedName(convertToEqualizer,[Default, Implicit]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(UseDefaultAssertions,[Default, Implicit]), UsedName(convertToStringCanWrapper,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(de.htwg.se.madn.util.CommandSpec)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
